plugins {
    id "com.diffplug.spotless"
}

repositories {
    gradlePluginPortal()
}

task installGitHooks(type: Copy) {
    from new File(rootProject.rootDir, '.hooks/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }

    from new File(rootProject.rootDir, '.hooks/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
}

task updateSubmodule {
    doLast {
        exec {
            commandLine 'git', 'submodule', 'update', '--init', '--remote', '--force'
        }
    }
}

build {
    dependsOn spotlessApply
    dependsOn installGitHooks
    dependsOn updateSubmodule
}

spotless {
    encoding 'UTF-8'
    format 'misc', {
        target('gradle/wrapper/gradle-wrapper.properties', '.gitattributes', '.gitignore', '.prettierignore', 'gradlew',
                'gradlew.bat', 'csci-b-443/src/**/resources/**/*.s', 'dna-sequence-aligner/src/**/resources/*.txt',
                'line-sweeper/src/**/resources/*.txt', 'shortest-path-finder/src/**/resources/*.in',
                'shortest-path-finder/src/**/resources/*.txt', 'text-statistics/src/**/resources/*.txt',
                'twitter-bot/src/**/resources/*.txt')
        trimTrailingWhitespace()
        endWithNewline()
    }
    groovyGradle {
        target '**/*.gradle' // default target of groovyGradle
        greclipse().configFile('./greclipse.properties')
        importOrder()
        trimTrailingWhitespace()
        endWithNewline()
    }
    flexmark {
        target '**/*.md'
        flexmark()
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'prettier', {
        target('.github/**/*.yml', '.vscode/**/*.json', '.prettierrc')
        prettier(['prettier': '3.4.2', '@prettier/plugin-xml': '3.4.1']).npmInstallCache().config(['printWidth': 120,
            "xmlSelfClosingSpace": false,
            "xmlSortAttributesByKey": true,
            "xmlWhitespaceSensitivity": "ignore",
            "plugins": ["@prettier/plugin-xml"]
        ])
        trimTrailingWhitespace()
        endWithNewline()
    }
}
